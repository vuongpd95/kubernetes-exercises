apiVersion: v1
kind: Service
metadata:
  name: cv-service
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: cv-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cv-service
  name: cv-service-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cv-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cv-service
    spec:
      containers:
      - name: cv-service
        image: lityourcode/cv-service:0.7
        command: ["bundle", "exec", "rackup", "--host", "0.0.0.0", "-p", "8080"]
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 3
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: RACK_ENV
          value: production
        - name: REDIS_CACHE_METASTORE
          value: redis://redis-cache-service:6379/0
        - name: REDIS_CACHE_ENTITYSTORE
          value: redis://redis-cache-service:6379/1
        - name: DATABASE_USERNAME
          valueFrom:
            secretRef:
              name: cv-service-db-secrets
              key: MYSQL_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretRef:
              name: cv-service-db-secrets
              key: MYSQL_PASSWORD
        - name: DATABASE_NAME
          valueFrom:
            secretRef:
              name: cv-service-db-secrets
              key: MYSQL_DATABASE
        ports:
        - containerPort: 8080
          name: http
